<app xmlns="http://www.marklogic.com/mx" xmlns:mx="http://www.marklogic.com/mx" default-context="?">

  <!-- passthru  //-->
  <path url="/resource/" type="passthru" description=""/>
  <path url="/robots.txt" type="passthru" description=""/>
  <path url="/static-test.html" type="passthru" description=""/>
  <path url="/app.xml" type="passthru" description=""/>


  <!-- http redirection //-->
  <path url="/forward.test" type="forward" description="example of forwarding">/static-test.html</path>
  <path url="/redirect.test" type="redirect" description="example of
                                                         redirecting,
                                                          changing the
                                                          url">/static-test.html</path>

  <!-- inline tests //-->
  <path url="/inline.test" method="GET">
    <html>
      <body>
        <h1>inline test</h1>
      </body>
    </html>
  </path>
  <path url="/inline2.test" type="inline" method="GET" description="inline test with no content type set, should fall back to using application/xml">
    <html>
      <body>
        <h1>inline test</h1>
      </body>
    </html>
  </path>
  <path url="/inline3.test" content-type="text/xml" method="GET" href="/static-test.html"/>
  <path url="/inline4.test" type="inline" content-type="text/html" method="GET"
        description="show embedded xquery">
    <html>
      <body>
        <h1>inline test</h1>
        <p>{fn:current-time()}</p>
      </body>
    </html>
  </path>


  <!-- data //-->
  <path url="/data.test" method="GET" description="inline test with no content type set, should fall back to using application/xml">
    <data title="this is /data.test">
      <test>
        <a>{1 + 1}</a>
      </test>
    </data>
  </path>
  <path url="/data2.test" method="GET">
    let $data := <test>a</test>
    return $data
  </path>
  <path url="/data3.test" method="GET" content-type="text/plain">
    mx:eval('1 + 1')
  </path>
  <path url="/data4.test" method="GET">
    mx:data('/mx')
  </path>
  <path url="/data5.test" method="GET">
  mx:data('/data.test')
  </path>
  <path url="/data6.test" method="GET" content-type="text/xml" href="/test.xml"/>
  <path url="/data7.test"  method="GET" content-type="text/plain">
    fn:string('{"text":"world"}')
  </path>
  <path url="/data8.test" method="GET">
  mx:data('/data7.test')
  </path>
  <path url="/data9.test" method="GET" content-type="text/xml">
  mx:data('/template1')
  </path>

  <!-- module //-->
  <path url="/xquery.test" method="GET" href="/modules/example.xqy"/>
  <path url="/xquery2.test" method="GET"
        href="/modules/example-module.xqm#my:test" ns="http://example.org/test">
    <arg>Hello</arg>
  </path>
  <path url="/xquery3.test" method="GET"
        href="/modules/example-module.xqm#my:test2"
        ns="http://example.org/test">
    <arg>World</arg>
    <arg>Hello</arg>
  </path>
 
  <!-- example templates (views) //-->
  <path url="/template1" type="template" method="GET"
        content-type="text/html" data="/data7.test"
        description="create template with mustache">
    <html>
      <head>
      </head>
      <body>
        Hello {{text}}!
      </body>
    </html>
  </path>
  <!-- example templates (views) //-->
  <path url="/template1b" type="template" method="GET"
        content-type="text/html" data="/xml.json"
        description="create template with mustache">
    <html>
      <head>
      </head>
      <body>
        Hello {{test}}!
      </body>
    </html>
  </path>


  <path url="/template2" type="template" method="GET" content-type="text/html" data="/data.test" description="">
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
      <xsl:template match="*">
        <html>
          <body>
            <h2>MX XSLT Template</h2>
            <textarea rows="10" cols="60"><xsl:copy-of select="."/></textarea>
          </body>
        </html>
      </xsl:template>
    </xsl:stylesheet>
  </path>
  <path url="/template3" type="template" method="GET" content-type="text/html" data="/xquery.test" description="">
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
      <xsl:template match="*">
        <html>
          <body>
            <h2>MX XSLT Template</h2>
            <textarea rows="10" cols="60"><xsl:copy-of select="."/></textarea>
          </body>
        </html>
      </xsl:template>
    </xsl:stylesheet>
  </path>

  <!-- default MX (required for MX build/test) //-->
  <path url="/mx" method="GET" type="inline" content-type="text/html" description="MX status page">
    <html>
      <body>
        <h1>MX Status Page</h1>
        <p>{fn:current-time()}</p>
      </body>
    </html>
  </path>
  <path url="/mx/map" method="GET" content-type="text/plain">
    mx:map()
  </path>


  <!-- json (EXPIREMENTAL!) //-->
  <path url="/xml.json" type="inline" content-type="application/json"
        convert="xml2json" method="GET" description="">
    <json type="object">
      <a type="string">test test</a>
    </json>
  </path>
  <path url="/xml1.json" type="inline" content-type="text/plain"
        method="GET" description="">
   xdmp:to-json((<test>test</test>))
  </path>


  <path url="/json.xml" type="inline" content-type="text/plain"
        convert="json2xml" method="GET" description="">
{"repositories":[{"url":"https://github.com/xquery/xprocxq","watchers":2,"language":"XQuery","pushed_at":"2011/06/03 13:48:18 -0700","has_wiki":true,"open_issues":0,"created_at":"2011/05/06 14:42:18 -0700","fork":false,"has_issues":true,"description":"implementation of xproc in xquery","size":4744,"private":false,"name":"xprocxq","forks":1,"owner":"xquery","has_downloads":true,"homepage":""}]}
  </path>

</app>
